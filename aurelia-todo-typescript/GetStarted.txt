Goals:
Primary: Basic todoApp with Aurelia / typescript / tests
Secondary: Code Coverage reporting, end to end integration testing
Tertiary: Web Component implementation

Steps followed:
start with blank folder, and add folders: build, dist, doc, src, styles, test
install npm from Terminal:
npm init, and just enter on all the options - this will create node_modules folder and a package.json file
that lists all the npm packages in the app
npm installs:
Gulp: Task runner for building, transpiling, deploying etc. etc.
pre: if you haven't already, install gulp globally: npm install gulp -g
npm install gulp --save-dev
create the gulpfile.js that points to the gulp tasks in the build/tasks directory
add this:
require('require-dir')('build/tasks');

define build/paths.js to setup
var appRoot = 'src/';
var outputRoot = 'dist/';

module.exports = {
    root: appRoot,
    source: appRoot + '**/*.ts',
    html: appRoot + '**/*.html',
    output: outputRoot,
    dtsSrc: [
        './typings/**/*.d.ts',
        './custom_typings/**/*.d.ts'
    ]
};


install require-dir to find the gulp tasks
npm install require-dir --save-dev


setup typescript - ES5 compilation:
    npm install gulp-typescript --save
    npm install gulp-sourcemaps --save
    [optional]-> Add build.js file to build/tasks -> add tsc build task (see build.js from aurelia-skeleton-typescript)
    setup type definitions for typescript
    -> typescript definition manager:
    npm install typings -g --save-dev
    sidenote: ..make sure typings up to date if installed: npm i -g typings
    typings init (adds the initial typings.json file)
    use typescript generation settings in webstorm
        - generate files to dist folder
        - watch on changed VCS files
    add tsconfig.json from project



setup mocha chai testing:
    setup mocha test runner:
        pm install gulp-mocha --save
        tsd install mocha --save //TODO: typings install
        npm install chai --save
        tsd install chai --save //TODO: typings install
        npm install source-map-support --save
        npm install core-js --save
        -> add test gulp tasks to test.js

setup jspm:
    global if necessary: npm install jspm -g
    for project: npm install jspm --save-dev
    add "*": "src/*", to paths in config.js

Add Index.html & index.js
    wire up SystemJS Module loader:
        add to main page:
        <script src="jspm_packages/system.js"></script>
        <script src="config.js"></script>

setup aurelia:
    jspm install aurelia-framework
    [temp]typings: copy typings.json from aurelia typescript project
    run: typings install

setup sass compilation:

setup bundling to combine all the tiny javascript files for performance reasons (not nece when http/2 is released)


links:
Npm:
https://docs.npmjs.com/ - see Getting Started
Gulp
https://markgoodyear.com/2014/01/getting-started-with-gulp/
typescript aurelia setup (notes here updated to reflect tsd replacement with typings install)
http://www.mikeobrien.net/blog/setting-up-a-typescript-aurelia-app-and-tests-from-scratch/
